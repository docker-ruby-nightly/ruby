name: Docker Build

on:
  workflow_dispatch:
    inputs:
      push:
        type: boolean
        default: false
        description: Push the images after build
  schedule:
    - cron: 0 20 * * *

permissions:
  contents: read
  packages: write

env:
  REGISTRY_IMAGE: ghcr.io/docker-ruby-nightly/ruby

jobs:
  set-up-matrix:
    name: Set up matrix
    runs-on: ubuntu-latest
    outputs:
      date: ${{ steps.fetch-date.outputs.date }}
      images: ${{ steps.fetch-matrix.outputs.images }}
      variants: ${{ steps.fetch-variants.outputs.variants }}
      json: ${{ steps.fetch-json.outputs.json }}
    steps:
      - uses: actions/checkout@v4
      - id: fetch-variants
        run: echo "variants=$(./variants.rb)" >> "$GITHUB_OUTPUT"
      - id: fetch-json
        run: echo "json=$(./nightly-versions.rb)" >> "$GITHUB_OUTPUT"
      - id: fetch-date
        run: echo "date=$(jq -r .master.date versions.json)" >> $GITHUB_OUTPUT
      - run: ./apply-templates.sh

      - id: fetch-matrix
        run: echo "images=$(./images.rb)" >> "$GITHUB_OUTPUT"

  build:
    needs: set-up-matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJson(needs.set-up-matrix.outputs.images) }}
    name: ${{ matrix.image.variant }} - ${{ matrix.image.platform }}
    steps:
      - uses: actions/checkout@v4
      - run: echo '${{ needs.set-up-matrix.outputs.json }}' > versions.json
      - run: ./apply-templates.sh

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            ${{ matrix.image.variant }}-nightly-${{ needs.set-up-matrix.outputs.date }}
            ${{ matrix.image.variant }}-nightly

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          context: ./master/${{ matrix.image.variant }}
          platforms: ${{ matrix.image.platform }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      # linux/amd64 => linux-amd64
      - run: |
          platform=${{ matrix.image.platform }}
          echo "platform_safe=${platform//\//-}" >> $GITHUB_ENV

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ matrix.image.variant }}-${{ env.platform_safe }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - build
      - set-up-matrix
    strategy:
      fail-fast: false
      matrix:
        variant: ${{ fromJson(needs.set-up-matrix.outputs.variants) }}
    name: Merge - ${{ matrix.variant }}

    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-${{ matrix.variant }}-*
          merge-multiple: true
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            ${{ matrix.variant }}-nightly-${{ needs.set-up-matrix.outputs.date }}
            ${{ matrix.variant }}-nightly

      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      - name: Create manifest list and push
        if: github.event_name == 'schedule' || inputs.push == true
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}
